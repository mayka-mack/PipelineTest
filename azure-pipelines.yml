# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Get true branch name -- cannot use Build.SourceBranchName due to / in the branch name
name: $[ variables['branchName'] ]
variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/') }}:
    branchName: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/pull/') }}:
    branchName: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

trigger:
  branches:
    include:
    - 'release/*'

pool:
  vmImage: ubuntu-latest

steps:
- task: DeleteFiles@1
  displayName: 'Clean workspace'
  inputs:
    SourceFolder: '$(Pipeline.Workspace)'
    Contents: '*/**'
    RemoveDotFiles: true
  condition: always()

- checkout: self
  fetchDepth: 0
  fetchTags: true
  persistCredentials: true

- script: |
    git config user.email pipeline@pipeline.com & git config user.name "Pipeline"
  displayName: Set Git username and email for pipeline
  workingDirectory: $(System.DefaultWorkingDirectory)

- script: |
    versionNumber="$(git show -s --format=%s)"
    echo -e "{BLUE}Updating production branch"
    git checkout production
    git merge --squash "origin/$BRANCHNAME"
    echo -e "{BLUE}Committing changes"
    git commit -m "v$versionNumber"
    echo -e "{BLUE}Tagging commit"
    git tag "v$versionNumber"
    echo -e "{BLUE}Pushing changes to origin"
    git push origin production
    echo -e "{BLUE}Deleting branch $BRANCHNAME"
    git push -d origin "$BRANCHNAME"
  displayName: Commit incremented version
  workingDirectory: $(System.DefaultWorkingDirectory)
